\name{vkGetUserDialogs}
\alias{vkGetUserDialogs}
\title{Возвращает список диалогов текущего пользователя или сообщества}
\description{Данная функция вернёт список диалогов, точнее последнее сообщение из кажждого диалога, для того, что бы получить список лиалогов сообщства необходимо в аргумент access_token передать ключ доступа к сообществу, полученный с помощью функции vkGetGroupToken, для того, что бы получить список диалогов пользователя необходимо использовать ключ доступа полученный с помощбю функции vkGetToken}
\usage{
vkGetUserDialogs(offset = NULL, count = NULL, start_message_id = NULL, preview_length = 0, unread = 0, important = 0, unanswered =  0, api_version = NULL, access_token = NULL)
}
\arguments{
  \item{offset}{Целое число, смещение, необходимое для выборки определенного подмножества диалогов.}
  \item{count}{Положительное число, по умолчанию 20, максимальное значение 200, количество диалогов, которое необходимо получить. }
  \item{start_message_id}{Положительное число, идентификатор сообщения, начиная с которого нужно вернуть список диалогов. Деали смотрите ниже.}
  \item{preview_length}{Положительное число, количество символов, по которому нужно обрезать сообщение. Укажите 0, если Вы не хотите обрезать сообщение. (по умолчанию сообщения не обрезаются). Обратите внимание, текст обрезается по словам, точное число символов может не совпадать с указанным значением. }
  \item{unread}{1 — вернуть только диалоги, в которых есть непрочитанные входящие сообщения. По умолчанию: 0.}
  \item{important}{1 — вернуть диалоги с пометкой «Важные» (для сообщений сообществ).}
  \item{unanswered}{1 — вернуть диалоги с пометкой «Неотвеченные» (для сообщений сообществ).}
  \item{api_version}{Токен доступа к API, полученный с помощью функций vkAuth или vkGetToken}
  \item{access_token}{Токен доступа к API, полученный с помощью функций vkAuth или vkGetToken}
}
\details{
Если был передан параметр start_message_id, будет найдена позиция диалога в списке, идентификатор последнего сообщения которого равен start_message_id (или ближайший к нему более ранний). Начиная с этой позиции будет возвращено count диалогов. Смещение offset в этом случае будет отсчитываться от этой позиции (оно может быть отрицательным).

Метод API который используется в функции: messages.getDialogs (https://vk.com/dev/messages.getDialogs)

Метод messages.getDialogs возвращает коллекцию объектов описывающих личные сообщения. Список всех возможных полей описания личных сообщений можно найти [тут](https://vk.com/dev/objects/message).
}
\value{Дата фрейм со следующими значениями:
\item{1. id}{идентификатор сообщения (не возвращается для пересланных сообщений).}
\item{2. date}{дата отправки сообщения.}
\item{3. out}{тип сообщения (0 — полученное, 1 — отправленное, не возвращается для пересланных сообщений).}
\item{4. user_id}{идентификатор пользователя, в диалоге с которым находится сообщение.}
\item{5. read_state}{статус сообщения (0 — не прочитано, 1 — прочитано, не возвращается для пересланных сообщений).}
\item{6. title}{заголовок сообщения или беседы.}
\item{7. body}{текст сообщения.}
\item{8. random_id}{идентификатор, используемый при отправке сообщения. Возвращается только для исходящих сообщений.}
}
\author{
Alexey Seleznev
}

\examples{
library(rvkstat)
# Получаем ключ доступа для сообщества
group_token <- vkGetGroupToken(app_id = 111111, group_ids = 222222)

# Получаем список диалогов
message <- vkGetUserDialogs(access_token = group_token)
}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory.
